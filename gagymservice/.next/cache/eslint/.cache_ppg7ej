[{"/Users/hee/Documents/Project/gagymservice/pages/_app.tsx":"1","/Users/hee/Documents/Project/gagymservice/pages/api/hello.ts":"2","/Users/hee/Documents/Project/gagymservice/pages/index.tsx":"3","/Users/hee/Documents/Project/gagymservice/pages/partner/information/Create.tsx":"4","/Users/hee/Documents/Project/gagymservice/pages/partner/information/Tcreate.tsx":"5","/Users/hee/Documents/Project/gagymservice/pages/partner/ptDiary/detail/[id].tsx":"6","/Users/hee/Documents/Project/gagymservice/pages/partner/ptDiary/list.tsx":"7","/Users/hee/Documents/Project/gagymservice/pages/partner/reservation/detail/[id].tsx":"8","/Users/hee/Documents/Project/gagymservice/pages/partner/reservation/list.tsx":"9","/Users/hee/Documents/Project/gagymservice/components/appbar.tsx":"10","/Users/hee/Documents/Project/gagymservice/components/layout.tsx":"11","/Users/hee/Documents/Project/gagymservice/components/sidebar/sidebar.tsx":"12","/Users/hee/Documents/Project/gagymservice/pages/api/partner.ts":"13","/Users/hee/Documents/Project/gagymservice/pages/api/diary.ts":"14","/Users/hee/Documents/Project/gagymservice/pages/api/trainer.ts":"15","/Users/hee/Documents/Project/gagymservice/pages/partner/information/detail/[id].tsx":"16","/Users/hee/Documents/Project/gagymservice/pages/partner/information/edit/[id].tsx":"17","/Users/hee/Documents/Project/gagymservice/pages/api/file.ts":"18","/Users/hee/Documents/Project/gagymservice/pages/partner/information/list.tsx":"19","/Users/hee/Documents/Project/gagymservice/pages/partner/information/tList.tsx":"20","/Users/hee/Documents/Project/gagymservice/lib/string.tsx":"21","/Users/hee/Documents/Project/gagymservice/pages/api/reservation.ts":"22","/Users/hee/Documents/Project/gagymservice/components/chart/columnBar.tsx":"23","/Users/hee/Documents/Project/gagymservice/components/footer.tsx":"24"},{"size":396,"mtime":1637560510522,"results":"25","hashOfConfig":"26"},{"size":307,"mtime":1636616008754,"results":"27","hashOfConfig":"26"},{"size":5164,"mtime":1637565577357,"results":"28","hashOfConfig":"26"},{"size":11962,"mtime":1637543714573,"results":"29","hashOfConfig":"26"},{"size":10521,"mtime":1637564773305,"results":"30","hashOfConfig":"26"},{"size":7970,"mtime":1637512552700,"results":"31","hashOfConfig":"26"},{"size":4336,"mtime":1637554267897,"results":"32","hashOfConfig":"26"},{"size":5449,"mtime":1637512913303,"results":"33","hashOfConfig":"26"},{"size":1950,"mtime":1637554240074,"results":"34","hashOfConfig":"26"},{"size":3140,"mtime":1637511966368,"results":"35","hashOfConfig":"26"},{"size":668,"mtime":1637550801956,"results":"36","hashOfConfig":"26"},{"size":873,"mtime":1636516862456,"results":"37","hashOfConfig":"26"},{"size":1791,"mtime":1637140167138,"results":"38","hashOfConfig":"26"},{"size":1366,"mtime":1637201139966,"results":"39","hashOfConfig":"26"},{"size":1650,"mtime":1637517593302,"results":"40","hashOfConfig":"26"},{"size":14797,"mtime":1637548496477,"results":"41","hashOfConfig":"26"},{"size":24748,"mtime":1637504562842,"results":"42","hashOfConfig":"26"},{"size":330,"mtime":1637544483123,"results":"43","hashOfConfig":"26"},{"size":2830,"mtime":1637554333264,"results":"44","hashOfConfig":"26"},{"size":1785,"mtime":1637504821063,"results":"45","hashOfConfig":"26"},{"size":528,"mtime":1637509658759,"results":"46","hashOfConfig":"26"},{"size":1431,"mtime":1637213500267,"results":"47","hashOfConfig":"26"},{"size":917,"mtime":1637551187192,"results":"48","hashOfConfig":"26"},{"size":2057,"mtime":1637509933950,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1emseue",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hee/Documents/Project/gagymservice/pages/_app.tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/api/hello.ts",[],"/Users/hee/Documents/Project/gagymservice/pages/index.tsx",["101","102"],"/Users/hee/Documents/Project/gagymservice/pages/partner/information/Create.tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/partner/information/Tcreate.tsx",["103"],"import { MutableRefObject, useRef, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { AppDispatch, RootState } from \"../../../provider\";\nimport { TrainerItem } from \"../../../provider/modules/trainer\";\nimport { requestAddTrainer } from \"../../../middleware/modules/trainer\";\nimport { Image } from \"react-bootstrap\";\nimport { requestFetchPartner } from \"../../../middleware/modules/partner\";\nimport React from \"react\";\nimport styles from \"../../../styles/TrainerCreate.module.css\";\nimport Layout from \"../../../components/layout\";\nimport { right } from \"@popperjs/core\";\nconst Tcreate = () => {\n  const gymCodeRef = useRef() as MutableRefObject<HTMLDivElement>;\n  const trainerNameRef = useRef() as MutableRefObject<HTMLInputElement>;\n  const trainerIntroRef = useRef() as MutableRefObject<HTMLInputElement>;\n  // const trainerPhotoUrlRef=useRef<HTMLInputElement>(null);\n  const trainerPhotoUrlRef = useRef() as MutableRefObject<HTMLInputElement>;\n\n  const pt1TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n  const pt10TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n  const pt30TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n\n  const yoga1TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n  const yoga10TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n  const yoga30TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n\n  const pilates1TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n  const pilates10TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n  const pilates30TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n\n  const partnerData = useSelector((state: RootState) => state.partner);\n  const trainerData = useSelector((state: RootState) => state.trainer.data);\n  const isAddCompleted = useSelector(\n    (state: RootState) => state.trainer.isAddCompleted\n  );\n  const dispatch = useDispatch<AppDispatch>();\n\n  const router = useRouter();\n\n  // const id = router.query.id as string;\n\n  useEffect(() => {\n    if (!partnerData.isFetched) {\n      dispatch(requestFetchPartner());\n    }\n    console.log(\"--isAddCompleted 변경: \" + isAddCompleted);\n    isAddCompleted &&\n      // router.push(`/partner/information/detail/${partnerData.data.find((item)=>item.id)}`);\n      router.push(`/partner/information/list`);\n  }, [isAddCompleted, router, dispatch]);\n\n  const [url, setUrl] = useState<string | undefined>(\"\");\n\n  // console.log(\"확인용\" + url);\n  const changeFile = () => {\n    console.log(\"changed\");\n\n    if (trainerPhotoUrlRef.current?.files?.length) {\n      const imageFile = trainerPhotoUrlRef.current.files[0];\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        setUrl(reader.result?.toString());\n      };\n      reader.readAsDataURL(imageFile);\n    }\n  };\n  //   let checked = document.querySelectorAll(\"input[type='checkbox']:checked\");\n\n  const handleAddClick = () => {\n    if (trainerPhotoUrlRef.current?.files?.length) {\n      const imageFile = trainerPhotoUrlRef.current.files[0];\n      const reader = new FileReader();\n      reader.onload = () => {\n        const radio = gymCodeRef.current.querySelector(\n          \"input[type=radio]:checked\"\n        ) as HTMLInputElement;\n        console.log(\"gymcode\");\n        console.log(radio.value);\n        const item: TrainerItem = {\n          id: trainerData.length ? trainerData[0].id + 1 : 1,\n          gymCode: radio.value,\n          trainerName: trainerNameRef.current?.value,\n          trainerIntro: trainerIntroRef.current?.value,\n          trainerPhotoUrl: reader.result ? reader.result?.toString() : \"\",\n          // trainerPhotoUrl: trainerPhotoUrlRef.current?.value,\n          fileName: imageFile.name,\n          fileType: imageFile.type,\n          pt1TimePrice: pt1TimePriceRef.current?.value,\n          pt10TimePrice: pt10TimePriceRef.current?.value,\n          pt30TimePrice: pt30TimePriceRef.current?.value,\n          yoga1TimePrice: yoga1TimePriceRef.current?.value,\n          yoga10TimePrice: yoga10TimePriceRef.current?.value,\n          yoga30TimePrice: yoga30TimePriceRef.current?.value,\n          pilates1TimePrice: pilates1TimePriceRef.current?.value,\n          pilates10TimePrice: pilates10TimePriceRef.current?.value,\n          pilates30TimePrice: pilates30TimePriceRef.current?.value,\n        };\n        dispatch(requestAddTrainer(item));\n        // router.push(`/partner/information/tList`)\n      };\n      reader.readAsDataURL(imageFile);\n    }\n  };\n\n  return (\n    <Layout>\n      <body>\n        <div className={styles.body}>\n          <h3 className=\"mt-5 me-5 text-end\"> 등 록</h3>\n          {/* 헬스장 이름 */}\n          <div className={styles.div}>\n            <p>헬스장 이름</p>\n            <div\n              className=\"btn-group ms-2\"\n              role=\"group\"\n              aria-label=\"Basic checkbox toggle button group\"\n              style={{ width: \"400px\", height: \"2rem\" }}\n              ref={gymCodeRef}\n            >\n              {partnerData.data.map((item, index) => (\n                <div className=\"ms-2\" key={`partner-item-${index}`}>\n                  <div className=\"form-check\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"gymName\"\n                      id={item.gymName}\n                      value={item.gymCoNum}\n                    />\n                    <label className=\"form-check-label\" htmlFor={item.gymName}>\n                      {item.gymName}\n                    </label>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          {/* 강사 이름 */}\n          <div className={styles.div}>\n            <p>강사 이름</p>\n            <input ref={trainerNameRef} className={styles.input}></input>\n          </div>\n          {/* 한줄 소개 */}\n          <div className={styles.div}>\n            <p>한줄 소개</p>\n            <input ref={trainerIntroRef} className={styles.input}></input>\n          </div>\n          {/* 사진 */}\n          <div className={styles.div}>\n            <p>사진</p>\n            <div className=\"d-flex\">\n              <Image\n                className=\" mt-3\"\n                style={{\n                  width: \"100px\",\n                  height: \"100px\",\n                  marginRight: \"30px\",\n                }}\n                src={url}\n                alt=\"trainerPhoto\"\n              />\n              <input\n                className={styles.input}\n                type=\"file\"\n                accept=\"image/*\"\n                style={{\n                  marginTop: \"15px\",\n                }}\n                onChange={() => {\n                  changeFile();\n                }}\n                ref={trainerPhotoUrlRef}\n              />\n            </div>\n          </div>\n          {/* 가격 */}\n          <div className={styles.div}>\n            <p>가 격</p>\n            <div className=\"mt-3 d-flex\">\n              <table className=\"\">\n                <thead>\n                  <th className=\"text-center me-3\"></th>\n                  <th className=\"text-center\">1Day</th>\n                  <th className=\"text-center\">3Day</th>\n                  <th className=\"text-center\">7Day</th>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>\n                      <h5>PT</h5>\n                    </td>\n                    <td>\n                      <input\n                        ref={pt1TimePriceRef}\n                        className={styles.tInput}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className={styles.tInput}\n                        ref={pt10TimePriceRef}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className={styles.tInput}\n                        ref={pt30TimePriceRef}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <h5>요가</h5>\n                    </td>\n                    <td>\n                      <input\n                        ref={yoga1TimePriceRef}\n                        className={styles.tInput}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className={styles.tInput}\n                        ref={yoga10TimePriceRef}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className={styles.tInput}\n                        ref={yoga30TimePriceRef}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <h5>필라테스</h5>\n                    </td>\n                    <td>\n                      <input\n                        ref={pilates1TimePriceRef}\n                        className={styles.tInput}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className={styles.tInput}\n                        ref={pilates10TimePriceRef}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className={styles.tInput}\n                        ref={pilates30TimePriceRef}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          {/* 등록 버튼 */}\n          <div className={styles.button}>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => {\n                handleAddClick();\n              }}\n            >\n              등록하기\n            </button>\n          </div>\n        </div>\n      </body>\n    </Layout>\n  );\n};\nexport default Tcreate;\n","/Users/hee/Documents/Project/gagymservice/pages/partner/ptDiary/detail/[id].tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/partner/ptDiary/list.tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/partner/reservation/detail/[id].tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/partner/reservation/list.tsx",[],"/Users/hee/Documents/Project/gagymservice/components/appbar.tsx",["104","105"],"import { bottom } from \"@popperjs/core\";\nimport Link from \"next/link\";\nimport { Navbar, Container, Nav, NavLink } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nconst AppBar = () => {\n  return (\n    <Navbar\n      bg=\"\"\n      expand=\"lg\"\n      className=\"mx-auto\"\n      style={{ width: \"90%\", borderBottom: \"solid\" }}\n    >\n      <Container className=\"w-100\">\n        <Navbar.Brand className=\"ms-5\">\n          <Link href=\"/\">\n            <img style={{ width: \"130px\" }} src=\"/logo.png\" alt=\"logo\" />\n          </Link>\n        </Navbar.Brand>\n        <div className=\" justify-content-end me-3\">\n          <div className=\"d-flex\">\n            <div>\n              <div className=\"input-group input-group-sm mb-3\">\n                <span\n                  className=\"input-group-text\"\n                  id=\"inputGroup-sizing-sm\"\n                  style={{ width: \"80px\", height: \"20px\" }}\n                >\n                  이름\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  style={{ width: \"100px\", height: \"20px\" }}\n                />\n              </div>\n              <div className=\"input-group input-group-sm mb-3\">\n                <span\n                  className=\"input-group-text text-nowrap \"\n                  id=\"inputGroup-sizing-sm\"\n                  style={{ width: \"80px\", height: \"20px\" }}\n                >\n                  사업자번호\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  aria-label=\"Sizing example input\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  style={{ width: \"100px\", height: \"20px\" }}\n                />\n              </div>\n            </div>\n            <button className=\"ms-3\" style={{ height: \"56px\" }}>\n              로그인\n            </button>\n          </div>\n          <div>\n            <Nav className=\"me-auto\">\n              <Nav.Link>\n                <Link href=\"/\">\n                  <a href=\"/\" className=\"\">\n                    MAIN\n                  </a>\n                </Link>\n              </Nav.Link>\n              <Nav.Link>\n                <Link href=\"/partner/information/list\">\n                  <a href=\"/partner/information/Create\" className=\"\">\n                    헬스장 정보\n                  </a>\n                </Link>\n              </Nav.Link>\n              <Nav.Link>\n                <Link href=\"/partner/reservation/list\">\n                  <a href=\"/partner/information/detail/id\" className=\"\">\n                    예약 내역\n                  </a>\n                </Link>\n              </Nav.Link>\n              <Nav.Link>\n                <Link href=\"/partner/ptDiary/list\">\n                  <a href=\"/partner/ptDiary/list\" className=\"\">\n                    PT 일지\n                  </a>\n                </Link>\n              </Nav.Link>\n            </Nav>\n          </div>\n        </div>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default AppBar;\n","/Users/hee/Documents/Project/gagymservice/components/layout.tsx",[],"/Users/hee/Documents/Project/gagymservice/components/sidebar/sidebar.tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/api/partner.ts",[],"/Users/hee/Documents/Project/gagymservice/pages/api/diary.ts",[],"/Users/hee/Documents/Project/gagymservice/pages/api/trainer.ts",[],"/Users/hee/Documents/Project/gagymservice/pages/partner/information/detail/[id].tsx",["106","107"],"import { useRouter } from \"next/dist/client/router\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Modal, ModalBody, ModalFooter } from \"reactstrap\";\nimport Footer from \"../../../../components/footer\";\nimport Layout from \"../../../../components/layout\";\nimport {\n  requestFetchPartner,\n  requestFetchPartnerItem,\n  requestRemovePartner,\n} from \"../../../../middleware/modules/partner\";\nimport { requestFetchTrainer } from \"../../../../middleware/modules/trainer\";\nimport { AppDispatch, RootState, store } from \"../../../../provider\";\n\nconst PartnerDetail = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const router = useRouter();\n\n  const id = router.query.id as string;\n  console.log(id);\n\n  let partners = useSelector((state: RootState) =>\n    state.partner.data.find((item) => item.id === +id)\n  );\n  if (id) {\n    // redux에 데이터가 없으면\n    if (!partners) {\n      // 1건에 데이터를 가져와 store에 추가함\n      dispatch(requestFetchPartnerItem(+id));\n    }\n  }\n\n  const isRemoveCompleted = useSelector(\n    (state: RootState) => state.partner.isRemoveCompleted\n  );\n\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const trainer = useSelector((state: RootState) => state.trainer);\n\n  useEffect(() => {\n    dispatch(requestFetchTrainer());\n    isRemoveCompleted && router.push(`/partner/information/list`);\n  }, [dispatch, trainer.isFetched, isRemoveCompleted, router]);\n\n  const handleDeleteClick = () => {\n    dispatch(requestRemovePartner(+id));\n    router.push(`/partner/information/list`);\n  };\n\n  const trainers = trainer.data.filter(\n    (item) => item.gymCode == partners?.gymCoNum\n  );\n  console.log(trainers);\n\n  return (\n    <Layout>\n      <body>\n        {partners && (\n          <div className=\"mx-auto mt-5\" style={{ width: \"900px\" }}>\n            <h4 className=\"mt-5 text-center\"> 헬스장 정보</h4>\n            {/* 헬스장 명 */}\n            <div className=\"d-flex mt-5\">\n              <h4\n                className=\"col me-3 text-nowrap text-center\"\n                style={{ width: \"200px\" }}\n              >\n                헬스장 명\n              </h4>\n              <p\n                style={{\n                  width: \"400px\",\n                  height: \"45px\",\n                  borderBlockEndWidth: \"4px\",\n                }}\n              >\n                {/* {\" \"} */}\n                {partners.gymName}\n              </p>\n            </div>\n            {/* 헬스장 사진 */}\n            <div className=\"d-flex mt-3\">\n              <h4 className=\"col ms-5 text-nowrap text-center\">헬스장 사진</h4>\n              <div style={{ width: \"50%\" }}>\n                <img\n                  src={partners.gymPhoto}\n                  alt={partners.fileName}\n                  width={\"300px\"}\n                  height={\"300px\"}\n                  // style={{ marginLeft: \"100px\" }}\n                  className=\"mx-auto\"\n                />\n              </div>\n            </div>\n            {/* 사업자 번호 */}\n            <div className=\"d-flex mt-3\">\n              <h4\n                className=\"col me-3 text-nowrap text-center\"\n                style={{ width: \"200px\" }}\n              >\n                사업자 번호\n              </h4>\n              <p\n                style={{\n                  width: \"400px\",\n                  height: \"45px\",\n                  borderBlockEndWidth: \"4px\",\n                }}\n              >\n                {partners.gymCoNum}원\n              </p>\n            </div>\n            {/* 지역 */}\n            <div className=\"d-flex mt-3\">\n              <h4\n                className=\"col me-3 text-nowrap text-center\"\n                style={{ width: \"200px\" }}\n              >\n                지역\n              </h4>\n              <p\n                style={{\n                  width: \"400px\",\n                  height: \"45px\",\n                  borderBlockEndWidth: \"4px\",\n                }}\n              >\n                {partners.gymLocateSi} {partners.gymLocateGunGu}\n              </p>\n            </div>\n            {/* 주소 */}\n            <div className=\"d-flex mt-3\">\n              <h4\n                className=\"col me-3 text-nowrap text-center\"\n                style={{ width: \"200px\" }}\n              >\n                주소\n              </h4>\n              <p\n                style={{\n                  width: \"400px\",\n                  height: \"45px\",\n                  borderBlockEndWidth: \"4px\",\n                }}\n              >\n                {partners.gymAddress}\n              </p>\n            </div>\n            {/* 전화번호 */}\n            <div className=\"d-flex mt-3\">\n              <h4\n                className=\"col me-3 text-nowrap text-center\"\n                style={{ width: \"200px\" }}\n              >\n                전화 번호\n              </h4>\n              <p\n                style={{\n                  width: \"400px\",\n                  height: \"45px\",\n                  borderBlockEndWidth: \"4px\",\n                }}\n              >\n                {partners.gymPhoneNum}\n              </p>\n            </div>\n            {/* 운영시간 */}\n            <div className=\"d-flex mt-3\">\n              <h4\n                className=\"col me-3 text-nowrap text-center\"\n                style={{ width: \"200px\" }}\n              >\n                운영시간\n              </h4>\n              <p\n                style={{\n                  width: \"400px\",\n                  height: \"45px\",\n                  borderBlockEndWidth: \"4px\",\n                }}\n              >\n                {partners.gymTime}\n              </p>\n            </div>\n            {/* 강사 소개 */}\n            {/* {trainers&&( */}\n            <div className=\"mt-3 d-flex\">\n              <h4\n                className=\"col me-3 text-nowrap text-center\"\n                style={{ width: \"200px\" }}\n              >\n                강사 소개\n              </h4>\n              <p\n                style={{\n                  width: \"400px\",\n                  height: \"45px\",\n                  borderBlockEndWidth: \"4px\",\n                }}\n                className=\"d-flex\"\n              >\n                {trainers.map((item, index) => (\n                  <div className=\"d-flex ms-2\" key={index}>\n                    <Button\n                      name={item.trainerName}\n                      color=\"primary\"\n                      type=\"button\"\n                      onClick={() => setModalOpen(!modalOpen)}\n                    >\n                      {item.trainerName}\n                    </Button>\n                    <Modal\n                      toggle={() => setModalOpen(!modalOpen)}\n                      isOpen={modalOpen}\n                    >\n                      <div className=\" modal-header\">\n                        <h5\n                          className=\" modal-title\"\n                          // id=\"exampleModalLabel\"\n                        >\n                          강사 소개\n                        </h5>\n                        <button\n                          aria-label=\"Close\"\n                          className=\" close\"\n                          type=\"button\"\n                          onClick={() => setModalOpen(!modalOpen)}\n                        >\n                          <span aria-hidden={true}>×</span>\n                        </button>\n                      </div>\n\n                      <ModalBody>\n                        <div className=\"\">\n                          <div className=\"d-flex\">\n                            <p>이름 :</p>\n                            <p>{item.trainerName}</p>\n                          </div>\n                          <div className=\"d-flex\">\n                            <p>한줄 소개 :</p>\n                            <p>{item.trainerIntro}</p>\n                          </div>\n                          <div className=\"d-flex\">\n                            <img\n                              style={{ width: \"150px\", height: \"150px\" }}\n                              src={item.trainerPhotoUrl}\n                              alt=\"TrainerPhoto\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"d-flex\">\n                          <table className=\"table\">\n                            <thead>\n                              <tr>\n                                <th className=\"text-center me-3\" scope=\"col\">\n                                  <h3>-</h3>\n                                </th>\n                                <th className=\"text-center\" scope=\"col\">\n                                  1Time\n                                </th>\n                                <th className=\"text-center\" scope=\"col\">\n                                  10Time\n                                </th>\n                                <th className=\"text-center\" scope=\"col\">\n                                  30Time\n                                </th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              <tr className=\"mt-5\">\n                                <td className=\"text-center\">\n                                  <h5>PT</h5>\n                                </td>\n                                <td>\n                                  <p className=\"text-center\">\n                                    {item.pt1TimePrice}\n                                  </p>\n                                </td>\n                                <td>\n                                  <p className=\"text-center\">\n                                    {item.pt10TimePrice}\n                                  </p>\n                                </td>\n                                <td>\n                                  <p className=\"text-center\">\n                                    {item.pt30TimePrice}\n                                  </p>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </div>\n                      </ModalBody>\n                      <ModalFooter>\n                        <Button\n                          color=\"secondary\"\n                          type=\"button\"\n                          onClick={() => setModalOpen(!modalOpen)}\n                        >\n                          Close\n                        </Button>\n                        <Button color=\"primary\" type=\"button\">\n                          Save changes\n                        </Button>\n                      </ModalFooter>\n                    </Modal>\n                  </div>\n                ))}\n              </p>\n            </div>\n            {/* 가격 */}\n            <div>\n              <h4\n                className=\"col text-nowrap text-center\"\n                style={{ width: \"434px\" }}\n              >\n                가 격\n              </h4>\n              <div className=\"mt-3 ms-5 d-flex\">\n                <table className=\" table ms-5 \" style={{ width: \"780px\" }}>\n                  <thead>\n                    <tr>\n                      <th className=\"text-center me-3\" scope=\"col\">\n                        <h3></h3>\n                      </th>\n                      <th className=\"text-center\" scope=\"col\">\n                        1Day\n                      </th>\n                      <th className=\"text-center\" scope=\"col\">\n                        3Day\n                      </th>\n                      <th className=\"text-center\" scope=\"col\">\n                        7Day\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr className=\"\">\n                      <th className=\"text-center\" scope=\"row\">\n                        <h5>헬스장</h5>\n                      </th>\n                      <td>\n                        <p className=\"text-center\">{partners.gym1DayPrice}</p>\n                      </td>\n                      <td>\n                        <p className=\"text-center\">{partners.gym3DayPrice}</p>\n                      </td>\n                      <td>\n                        <p className=\"text-center\">{partners.gym7DayPrice}</p>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"mt-3 ms-5 d-flex\">\n                <table className=\" table ms-5 \" style={{ width: \"780px\" }}>\n                  <thead>\n                    <tr>\n                      <th className=\"text-center\">\n                        <h3></h3>\n                      </th>\n                      <th className=\"text-center\">1달</th>\n                      <th className=\"text-center\">3달</th>\n                      <th className=\"text-center\">6달</th>\n                      <th className=\"text-center\">12달</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr className=\"justify-content-between\">\n                      <td className=\"text-center text-nowrap\">\n                        <h5>헬스장</h5>\n                      </td>\n                      <td>\n                        <p className=\"text-center\">{partners.gymMonthPrice}</p>\n                      </td>\n                      <td>\n                        <p className=\"text-center\">{partners.gym3MonthPrice}</p>\n                      </td>\n                      <td>\n                        <p className=\"text-center\">{partners.gym6MonthPrice}</p>\n                      </td>\n                      <td>\n                        <p className=\"text-center\">{partners.gymYearPrice}</p>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            {/* 버튼 */}\n            <div className=\"d-grid mt-3  d-md-flex justify-content-end\">\n              <button\n                className=\"btn btn-primary mb-3 \"\n                type=\"button\"\n                onClick={() => {\n                  router.push(`/partner/information/edit/${partners?.id}`);\n                }}\n              >\n                수정\n              </button>\n              <button\n                className=\"btn btn-primary mb-3 ms-3 \"\n                type=\"button\"\n                onClick={() => {\n                  handleDeleteClick();\n                }}\n              >\n                삭제\n              </button>\n              <button className=\"btn btn-primary ms-3 mb-3\" type=\"button\">\n                목록\n              </button>\n            </div>\n          </div>\n        )}\n      </body>\n    </Layout>\n  );\n};\n\nexport default PartnerDetail;\n","/Users/hee/Documents/Project/gagymservice/pages/partner/information/edit/[id].tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/api/file.ts",[],"/Users/hee/Documents/Project/gagymservice/pages/partner/information/list.tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/partner/information/tList.tsx",[],"/Users/hee/Documents/Project/gagymservice/lib/string.tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/api/reservation.ts",[],"/Users/hee/Documents/Project/gagymservice/components/chart/columnBar.tsx",[],"/Users/hee/Documents/Project/gagymservice/components/footer.tsx",[],{"ruleId":"108","severity":1,"message":"109","line":49,"column":21,"nodeType":"110","endLine":49,"endColumn":62},{"ruleId":"108","severity":1,"message":"109","line":117,"column":21,"nodeType":"110","endLine":117,"endColumn":71},{"ruleId":"111","severity":1,"message":"112","line":51,"column":6,"nodeType":"113","endLine":51,"endColumn":40,"suggestions":"114"},{"ruleId":"108","severity":1,"message":"109","line":15,"column":11,"nodeType":"110","endLine":15,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":16,"column":13,"nodeType":"110","endLine":16,"endColumn":74},{"ruleId":"115","severity":1,"message":"116","line":84,"column":17,"nodeType":"110","endLine":91,"endColumn":19},{"ruleId":"115","severity":1,"message":"116","line":243,"column":29,"nodeType":"110","endLine":247,"endColumn":31},"@next/next/link-passhref","passHref is missing. See https://nextjs.org/docs/messages/link-passhref","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'partnerData.isFetched'. Either include it or remove the dependency array.","ArrayExpression",["117"],"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See https://nextjs.org/docs/messages/no-img-element.",{"desc":"118","fix":"119"},"Update the dependencies array to be: [isAddCompleted, router, dispatch, partnerData.isFetched]",{"range":"120","text":"121"},[2433,2467],"[isAddCompleted, router, dispatch, partnerData.isFetched]"]