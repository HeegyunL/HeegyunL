[{"/Users/hee/Documents/Project/gagymservice/pages/_app.tsx":"1","/Users/hee/Documents/Project/gagymservice/pages/api/hello.ts":"2","/Users/hee/Documents/Project/gagymservice/pages/index.tsx":"3","/Users/hee/Documents/Project/gagymservice/pages/partner/information/Create.tsx":"4","/Users/hee/Documents/Project/gagymservice/pages/partner/information/Tcreate.tsx":"5","/Users/hee/Documents/Project/gagymservice/pages/partner/ptDiary/detail/[id].tsx":"6","/Users/hee/Documents/Project/gagymservice/pages/partner/ptDiary/list.tsx":"7","/Users/hee/Documents/Project/gagymservice/pages/partner/reservation/detail/[id].tsx":"8","/Users/hee/Documents/Project/gagymservice/pages/partner/reservation/list.tsx":"9","/Users/hee/Documents/Project/gagymservice/components/appbar.tsx":"10","/Users/hee/Documents/Project/gagymservice/components/layout.tsx":"11","/Users/hee/Documents/Project/gagymservice/components/sidebar/sidebar.tsx":"12","/Users/hee/Documents/Project/gagymservice/pages/api/partner.ts":"13","/Users/hee/Documents/Project/gagymservice/pages/api/diary.ts":"14","/Users/hee/Documents/Project/gagymservice/pages/api/trainer.ts":"15","/Users/hee/Documents/Project/gagymservice/pages/partner/information/detail/[id].tsx":"16","/Users/hee/Documents/Project/gagymservice/pages/partner/information/edit/[id].tsx":"17","/Users/hee/Documents/Project/gagymservice/pages/api/file.ts":"18","/Users/hee/Documents/Project/gagymservice/pages/partner/information/list.tsx":"19","/Users/hee/Documents/Project/gagymservice/pages/partner/information/tList.tsx":"20","/Users/hee/Documents/Project/gagymservice/lib/string.tsx":"21","/Users/hee/Documents/Project/gagymservice/pages/api/reservation.ts":"22","/Users/hee/Documents/Project/gagymservice/components/chart/columnBar.tsx":"23","/Users/hee/Documents/Project/gagymservice/components/footer.tsx":"24"},{"size":396,"mtime":1637560510522,"results":"25","hashOfConfig":"26"},{"size":307,"mtime":1636616008754,"results":"27","hashOfConfig":"26"},{"size":5811,"mtime":1637573398914,"results":"28","hashOfConfig":"26"},{"size":10171,"mtime":1637572173165,"results":"29","hashOfConfig":"26"},{"size":10501,"mtime":1637572192570,"results":"30","hashOfConfig":"26"},{"size":7970,"mtime":1637512552700,"results":"31","hashOfConfig":"26"},{"size":4336,"mtime":1637554267897,"results":"32","hashOfConfig":"26"},{"size":5449,"mtime":1637512913303,"results":"33","hashOfConfig":"26"},{"size":1950,"mtime":1637554240074,"results":"34","hashOfConfig":"26"},{"size":3140,"mtime":1637511966368,"results":"35","hashOfConfig":"26"},{"size":668,"mtime":1637550801956,"results":"36","hashOfConfig":"26"},{"size":873,"mtime":1636516862456,"results":"37","hashOfConfig":"26"},{"size":1791,"mtime":1637140167138,"results":"38","hashOfConfig":"26"},{"size":1366,"mtime":1637201139966,"results":"39","hashOfConfig":"26"},{"size":1650,"mtime":1637517593302,"results":"40","hashOfConfig":"26"},{"size":14642,"mtime":1637633057681,"results":"41","hashOfConfig":"26"},{"size":24748,"mtime":1637504562842,"results":"42","hashOfConfig":"26"},{"size":330,"mtime":1637544483123,"results":"43","hashOfConfig":"26"},{"size":2830,"mtime":1637554333264,"results":"44","hashOfConfig":"26"},{"size":1785,"mtime":1637504821063,"results":"45","hashOfConfig":"26"},{"size":528,"mtime":1637509658759,"results":"46","hashOfConfig":"26"},{"size":1431,"mtime":1637213500267,"results":"47","hashOfConfig":"26"},{"size":997,"mtime":1637573130779,"results":"48","hashOfConfig":"26"},{"size":2057,"mtime":1637509933950,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1emseue",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hee/Documents/Project/gagymservice/pages/_app.tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/api/hello.ts",[],"/Users/hee/Documents/Project/gagymservice/pages/index.tsx",["101","102","103"],"import NavItem from \"@restart/ui/esm/NavItem\";\nimport axios from \"axios\";\nimport { iteratorSymbol } from \"immer/dist/internal\";\nimport type { NextPage } from \"next\";\nimport { useRouter } from \"next/dist/client/router\";\nimport Link from \"next/link\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ColumnBar from \"../components/chart/columnBar\";\nimport Layout from \"../components/layout\";\n\nimport partnerSaga from \"../middleware/modules/partner\";\nimport { RootState } from \"../provider\";\nimport { DiaryItemResponse } from \"./api/diary\";\nimport partnerApi, { PartnerItemResponse } from \"./api/partner\";\n\nconst Index = () => {\n  const partners = useSelector((state: RootState) => state.partner);\n  const diarys = useSelector((state: RootState) => state.diary);\n  const reservations = useSelector((state: RootState) => state.reservation);\n\n  const router = useRouter();\n  const [data, setData] = useState<{\n    ColumnBar: {\n      category: string;\n      amount: number;\n    }[];\n  }>();\n  const getData = async () => {\n    // const result = await axios.get<typeof data>();\n    // \"http://localhost:5050/sales-orders/stats?sd=1997-01-01&ed=1997-01-31\"\n    const sample: typeof data = {\n      ColumnBar: [\n        {\n          category: \"PT\",\n          amount: 21,\n        },\n        {\n          category: \"YOGA\",\n          amount: 15,\n        },\n        {\n          category: \"PILATES\",\n          amount: 15,\n        },\n        {\n          category: \"GYM\",\n          amount: 27,\n        },\n      ],\n    };\n    setData(sample);\n    // setData(result.data);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <Layout>\n      <div>\n        <header></header>\n        <body>\n          <div className=\"mx-auto\" style={{ width: \"850px\" }}>\n            <div className=\"justify-content-md-end\">\n              {/* <h4 className=\"mb-3 float-start\">헬스장 정보</h4> */}\n              <Link href=\"/partner/information/detail\">\n                <a>\n                  {/* <button className=\"btn btn-primary float-end btn-sm\">\n                    상세 보기\n                  </button> */}\n                </a>\n              </Link>\n              <div className=\"d-flex\">\n                <table className=\"table\" style={{ width: \"40%\" }}>\n                  <thead className=\"text-center my-2\">\n                    <tr>\n                      <th scope=\"col\">헬스장 명</th>\n                    </tr>\n                  </thead>\n                  {partners.data.map((item, index) => (\n                    <tbody key={`partners-item-${index}`}>\n                      <Link href={`/partner/information/detail/${item.id}}`}>\n                        <tr className=\"text-center my-2\">\n                          <td>{item.gymName}</td>\n                        </tr>\n                      </Link>\n                    </tbody>\n                  ))}\n                </table>\n                {/* <h2 style={{ textAlign: \"center\" }}>제품별 매출액</h2> */}\n                {data && <ColumnBar data={data.ColumnBar} />}\n              </div>\n            </div>\n            <div className=\"mt-5\">\n              <h4 className=\" float-start\">예약 목록</h4>\n              <Link href=\"/partner/reservation/list\">\n                <a>\n                  <button className=\"btn btn-primary float-end btn-sm\">\n                    목록 보기\n                  </button>\n                </a>\n              </Link>\n              <table className=\"table mx-auto\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">이름</th>\n                    <th scope=\"col\">헬스장명</th>\n                    <th scope=\"col\">전화번호</th>\n                    <th scope=\"col\">희망운영권</th>\n                    <th scope=\"col\">희망 강사</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {reservations.data.map((item, index) => (\n                    <tr key={`partners-item-${index}`}>\n                      <td>{item.memberName}</td>\n                      <td>{item.gymName}</td>\n                      <td>{item.memberPhone}</td>\n                      <td>{item.boughtService}</td>\n                      <td>{item.trainerName}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"mt-5\">\n              <h4 className=\" float-start\">PT 일지</h4>\n              <Link href=\"/partner/ptDiary/list\">\n                <a>\n                  <button className=\"btn btn-primary float-end btn-sm\">\n                    목록 보기\n                  </button>\n                </a>\n              </Link>\n              <table className=\"table mx-auto\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">이름</th>\n                    <th scope=\"col\">식단</th>\n                    <th scope=\"col\">운동</th>\n                    <th scope=\"col\">문의사항</th>\n                    <th scope=\"col\">피드백</th>\n                  </tr>\n                </thead>\n                {diarys.data.map((item, index) => (\n                  <tbody key={`partners-item-${index}`}>\n                    <Link href={`/partner/ptDiary/detail/${item.id}`}>\n                      <tr>\n                        <td>{item.memberName}</td>\n                        <td>{item.diaryMorning}</td>\n                        <td>{item.diaryRoutine}</td>\n                        <td>{item.diaryRequest}</td>\n                        <td>{item.trainerFeedback}</td>\n                      </tr>\n                    </Link>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          </div>\n        </body>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Index;\n","/Users/hee/Documents/Project/gagymservice/pages/partner/information/Create.tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/partner/information/Tcreate.tsx",["104"],"import { MutableRefObject, useRef, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { AppDispatch, RootState } from \"../../../provider\";\nimport { TrainerItem } from \"../../../provider/modules/trainer\";\nimport { requestAddTrainer } from \"../../../middleware/modules/trainer\";\nimport { Image } from \"react-bootstrap\";\nimport { requestFetchPartner } from \"../../../middleware/modules/partner\";\nimport React from \"react\";\nimport styles from \"../../../styles/TrainerCreate.module.css\";\nimport Layout from \"../../../components/layout\";\nimport { right } from \"@popperjs/core\";\nconst Tcreate = () => {\n  const gymCodeRef = useRef() as MutableRefObject<HTMLDivElement>;\n  const trainerNameRef = useRef() as MutableRefObject<HTMLInputElement>;\n  const trainerIntroRef = useRef() as MutableRefObject<HTMLInputElement>;\n  // const trainerPhotoUrlRef=useRef<HTMLInputElement>(null);\n  const trainerPhotoUrlRef = useRef() as MutableRefObject<HTMLInputElement>;\n\n  const pt1TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n  const pt10TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n  const pt30TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n\n  const yoga1TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n  const yoga10TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n  const yoga30TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n\n  const pilates1TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n  const pilates10TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n  const pilates30TimePriceRef = useRef() as MutableRefObject<HTMLInputElement>;\n\n  const partnerData = useSelector((state: RootState) => state.partner);\n  const trainerData = useSelector((state: RootState) => state.trainer.data);\n  const isAddCompleted = useSelector(\n    (state: RootState) => state.trainer.isAddCompleted\n  );\n  const dispatch = useDispatch<AppDispatch>();\n\n  const router = useRouter();\n\n  // const id = router.query.id as string;\n\n  useEffect(() => {\n    if (!partnerData.isFetched) {\n      dispatch(requestFetchPartner());\n    }\n    console.log(\"--isAddCompleted 변경: \" + isAddCompleted);\n    isAddCompleted &&\n      // router.push(`/partner/information/detail/${partnerData.data.find((item)=>item.id)}`);\n      router.push(`/partner/information/list`);\n  }, [isAddCompleted, router, dispatch]);\n\n  const [url, setUrl] = useState<string | undefined>(\"\");\n\n  // console.log(\"확인용\" + url);\n  const changeFile = () => {\n    console.log(\"changed\");\n\n    if (trainerPhotoUrlRef.current?.files?.length) {\n      const imageFile = trainerPhotoUrlRef.current.files[0];\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        setUrl(reader.result?.toString());\n      };\n      reader.readAsDataURL(imageFile);\n    }\n  };\n  //   let checked = document.querySelectorAll(\"input[type='checkbox']:checked\");\n\n  const handleAddClick = () => {\n    if (trainerPhotoUrlRef.current?.files?.length) {\n      const imageFile = trainerPhotoUrlRef.current.files[0];\n      const reader = new FileReader();\n      reader.onload = () => {\n        const radio = gymCodeRef.current.querySelector(\n          \"input[type=radio]:checked\"\n        ) as HTMLInputElement;\n        console.log(\"gymcode\");\n        console.log(radio.value);\n        const item: TrainerItem = {\n          id: trainerData.length ? trainerData[0].id + 1 : 1,\n          gymCode: radio.value,\n          trainerName: trainerNameRef.current?.value,\n          trainerIntro: trainerIntroRef.current?.value,\n          trainerPhotoUrl: reader.result ? reader.result?.toString() : \"\",\n          // trainerPhotoUrl: trainerPhotoUrlRef.current?.value,\n          fileName: imageFile.name,\n          fileType: imageFile.type,\n          pt1TimePrice: pt1TimePriceRef.current?.value,\n          pt10TimePrice: pt10TimePriceRef.current?.value,\n          pt30TimePrice: pt30TimePriceRef.current?.value,\n          yoga1TimePrice: yoga1TimePriceRef.current?.value,\n          yoga10TimePrice: yoga10TimePriceRef.current?.value,\n          yoga30TimePrice: yoga30TimePriceRef.current?.value,\n          pilates1TimePrice: pilates1TimePriceRef.current?.value,\n          pilates10TimePrice: pilates10TimePriceRef.current?.value,\n          pilates30TimePrice: pilates30TimePriceRef.current?.value,\n        };\n        dispatch(requestAddTrainer(item));\n        // router.push(`/partner/information/tList`)\n      };\n      reader.readAsDataURL(imageFile);\n    }\n  };\n\n  return (\n    <Layout>\n      <body>\n        <div className={styles.body}>\n          <div className=\"mt-5\"></div>\n          {/* 헬스장 이름 */}\n          <div className={styles.div}>\n            <p>헬스장 이름</p>\n            <div\n              className=\"btn-group ms-2\"\n              role=\"group\"\n              aria-label=\"Basic checkbox toggle button group\"\n              style={{ width: \"400px\", height: \"2rem\" }}\n              ref={gymCodeRef}\n            >\n              {partnerData.data.map((item, index) => (\n                <div className=\"ms-2\" key={`partner-item-${index}`}>\n                  <div className=\"form-check\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"gymName\"\n                      id={item.gymName}\n                      value={item.gymCoNum}\n                    />\n                    <label className=\"form-check-label\" htmlFor={item.gymName}>\n                      {item.gymName}\n                    </label>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          {/* 강사 이름 */}\n          <div className={styles.div}>\n            <p>강사 이름</p>\n            <input ref={trainerNameRef} className={styles.input}></input>\n          </div>\n          {/* 한줄 소개 */}\n          <div className={styles.div}>\n            <p>한줄 소개</p>\n            <input ref={trainerIntroRef} className={styles.input}></input>\n          </div>\n          {/* 사진 */}\n          <div className={styles.div}>\n            <p>사진</p>\n            <div className=\"d-flex\">\n              <Image\n                className=\" mt-3\"\n                style={{\n                  width: \"100px\",\n                  height: \"100px\",\n                  marginRight: \"30px\",\n                }}\n                src={url}\n                alt=\"trainerPhoto\"\n              />\n              <input\n                className={styles.input}\n                type=\"file\"\n                accept=\"image/*\"\n                style={{\n                  marginTop: \"15px\",\n                }}\n                onChange={() => {\n                  changeFile();\n                }}\n                ref={trainerPhotoUrlRef}\n              />\n            </div>\n          </div>\n          {/* 가격 */}\n          <div className={styles.div}>\n            <p>가 격</p>\n            <div className=\"mt-3 d-flex\">\n              <table className=\"\">\n                <thead>\n                  <th className=\"text-center me-3\"></th>\n                  <th className=\"text-center\">1Day</th>\n                  <th className=\"text-center\">3Day</th>\n                  <th className=\"text-center\">7Day</th>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>\n                      <h5>PT</h5>\n                    </td>\n                    <td>\n                      <input\n                        ref={pt1TimePriceRef}\n                        className={styles.tInput}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className={styles.tInput}\n                        ref={pt10TimePriceRef}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className={styles.tInput}\n                        ref={pt30TimePriceRef}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <h5>요가</h5>\n                    </td>\n                    <td>\n                      <input\n                        ref={yoga1TimePriceRef}\n                        className={styles.tInput}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className={styles.tInput}\n                        ref={yoga10TimePriceRef}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className={styles.tInput}\n                        ref={yoga30TimePriceRef}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <h5>필라테스</h5>\n                    </td>\n                    <td>\n                      <input\n                        ref={pilates1TimePriceRef}\n                        className={styles.tInput}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className={styles.tInput}\n                        ref={pilates10TimePriceRef}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                    <td>\n                      <input\n                        className={styles.tInput}\n                        ref={pilates30TimePriceRef}\n                        type=\"text\"\n                      ></input>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          {/* 등록 버튼 */}\n          <div className={styles.button}>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => {\n                handleAddClick();\n              }}\n            >\n              등록하기\n            </button>\n          </div>\n        </div>\n      </body>\n    </Layout>\n  );\n};\nexport default Tcreate;\n","/Users/hee/Documents/Project/gagymservice/pages/partner/ptDiary/detail/[id].tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/partner/ptDiary/list.tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/partner/reservation/detail/[id].tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/partner/reservation/list.tsx",[],"/Users/hee/Documents/Project/gagymservice/components/appbar.tsx",["105","106"],"import { bottom } from \"@popperjs/core\";\nimport Link from \"next/link\";\nimport { Navbar, Container, Nav, NavLink } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nconst AppBar = () => {\n  return (\n    <Navbar\n      bg=\"\"\n      expand=\"lg\"\n      className=\"mx-auto\"\n      style={{ width: \"90%\", borderBottom: \"solid\" }}\n    >\n      <Container className=\"w-100\">\n        <Navbar.Brand className=\"ms-5\">\n          <Link href=\"/\">\n            <img style={{ width: \"130px\" }} src=\"/logo.png\" alt=\"logo\" />\n          </Link>\n        </Navbar.Brand>\n        <div className=\" justify-content-end me-3\">\n          <div className=\"d-flex\">\n            <div>\n              <div className=\"input-group input-group-sm mb-3\">\n                <span\n                  className=\"input-group-text\"\n                  id=\"inputGroup-sizing-sm\"\n                  style={{ width: \"80px\", height: \"20px\" }}\n                >\n                  이름\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  style={{ width: \"100px\", height: \"20px\" }}\n                />\n              </div>\n              <div className=\"input-group input-group-sm mb-3\">\n                <span\n                  className=\"input-group-text text-nowrap \"\n                  id=\"inputGroup-sizing-sm\"\n                  style={{ width: \"80px\", height: \"20px\" }}\n                >\n                  사업자번호\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  aria-label=\"Sizing example input\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  style={{ width: \"100px\", height: \"20px\" }}\n                />\n              </div>\n            </div>\n            <button className=\"ms-3\" style={{ height: \"56px\" }}>\n              로그인\n            </button>\n          </div>\n          <div>\n            <Nav className=\"me-auto\">\n              <Nav.Link>\n                <Link href=\"/\">\n                  <a href=\"/\" className=\"\">\n                    MAIN\n                  </a>\n                </Link>\n              </Nav.Link>\n              <Nav.Link>\n                <Link href=\"/partner/information/list\">\n                  <a href=\"/partner/information/Create\" className=\"\">\n                    헬스장 정보\n                  </a>\n                </Link>\n              </Nav.Link>\n              <Nav.Link>\n                <Link href=\"/partner/reservation/list\">\n                  <a href=\"/partner/information/detail/id\" className=\"\">\n                    예약 내역\n                  </a>\n                </Link>\n              </Nav.Link>\n              <Nav.Link>\n                <Link href=\"/partner/ptDiary/list\">\n                  <a href=\"/partner/ptDiary/list\" className=\"\">\n                    PT 일지\n                  </a>\n                </Link>\n              </Nav.Link>\n            </Nav>\n          </div>\n        </div>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default AppBar;\n","/Users/hee/Documents/Project/gagymservice/components/layout.tsx",[],"/Users/hee/Documents/Project/gagymservice/components/sidebar/sidebar.tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/api/partner.ts",[],"/Users/hee/Documents/Project/gagymservice/pages/api/diary.ts",[],"/Users/hee/Documents/Project/gagymservice/pages/api/trainer.ts",[],"/Users/hee/Documents/Project/gagymservice/pages/partner/information/detail/[id].tsx",["107","108"],"/Users/hee/Documents/Project/gagymservice/pages/partner/information/edit/[id].tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/api/file.ts",[],"/Users/hee/Documents/Project/gagymservice/pages/partner/information/list.tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/partner/information/tList.tsx",[],"/Users/hee/Documents/Project/gagymservice/lib/string.tsx",[],"/Users/hee/Documents/Project/gagymservice/pages/api/reservation.ts",[],"/Users/hee/Documents/Project/gagymservice/components/chart/columnBar.tsx",[],"/Users/hee/Documents/Project/gagymservice/components/footer.tsx",[],{"ruleId":"109","severity":1,"message":"110","line":58,"column":6,"nodeType":"111","endLine":58,"endColumn":8,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":84,"column":23,"nodeType":"115","endLine":84,"endColumn":78},{"ruleId":"113","severity":1,"message":"114","line":149,"column":21,"nodeType":"115","endLine":149,"endColumn":71},{"ruleId":"109","severity":1,"message":"116","line":51,"column":6,"nodeType":"111","endLine":51,"endColumn":40,"suggestions":"117"},{"ruleId":"113","severity":1,"message":"114","line":15,"column":11,"nodeType":"115","endLine":15,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":16,"column":13,"nodeType":"115","endLine":16,"endColumn":74},{"ruleId":"118","severity":1,"message":"119","line":84,"column":17,"nodeType":"115","endLine":91,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":238,"column":29,"nodeType":"115","endLine":242,"endColumn":31},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["120"],"@next/next/link-passhref","passHref is missing. See https://nextjs.org/docs/messages/link-passhref","JSXOpeningElement","React Hook useEffect has a missing dependency: 'partnerData.isFetched'. Either include it or remove the dependency array.",["121"],"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See https://nextjs.org/docs/messages/no-img-element.",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [getData]",{"range":"126","text":"127"},"Update the dependencies array to be: [isAddCompleted, router, dispatch, partnerData.isFetched]",{"range":"128","text":"129"},[1650,1652],"[getData]",[2433,2467],"[isAddCompleted, router, dispatch, partnerData.isFetched]"]